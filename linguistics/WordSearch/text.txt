The difference between a programmer & a hacker
A blog post by Steve Buckley, posted about 3 hours ago.
I have the relatively rare position of experiencing first hand the hiring process for programmers from three different perspectives, a job seeker, a hiring manager and a tech recruiter. I have interviewed for half a dozen different programming jobs, hired over a dozen programmers and recruited in excess of thirty different programmers.

Over the years, I've seen it all. From Tech Directors verbally abusing me during an interview, to candidates turning up to interviews after consuming maybe just a little too much Dutch courage. I learned very little from the extremes. It was everything in between that taught me how to define the difference between a programmer and a hacker.

In a nutshell, my definition of a hacker is someone who is truly passionate about understanding how things work and solving problems, so in the realm of development this is largely about producing good code and finding better solutions to real problems. It's that passion that is instantly decipherable in an interview. The truly passionate are obvious before they even set foot in the door.

The candidate's CV is always the first and most obvious indicator of potential quality. In my current role, if I'm seeking a new developer to join the team, I will instantly disregard any CV that doesn't have reference to a GitHub account or at least a portfolio of personal work hosted on the candidates own website. If you are a developer and you don't have a GitHub repo, get working on one. Even if it only contains the most fundamental examples of your coding ability, as a minimum it at least proves you can code. The better hiring managers are the ones who know what GitHub is for a start and more often than not they will shortlist those candidates whose code they can see before inviting them for interview as it gives them an instant impression of your ability. If you don't have a personal website and you are in the business of building websites, make one. Don't think about it, just do it. Even if the only content is your name & contact details along with links to your CV, GitHub, LinkedIn, etc, it's simply worth it to have your own personal domain for email purposes. I've seen hiring managers delete applications off hand simply because the candidate had an AOL email address.

Seriously.

I'm not excusing it, I'm simply telling you it happens.

The beauty about defining better employees by their level of passion is that passion can't be faked. A programmer who spends their spare time attending tech meet-ups, or blogging about the latest genius development in the industry is someone who blatantly get's excited about their industry. It's one thing to get paid to do something you love, it's an altogether different experience employing people to do what they love. The best developers I've had the pleasure of working with are those who see true value (be it commercial or moral) in what they do. My job is made infinitely easier when I don't have to focus all of my time ensuring my team is motivated and driven and the end result of a passionate developers work always stands out over that of someone who is just looking to earn a living.

This blog post doesn't contain a magic formula or even any groundbreaking inside secrets on how to land the job of your dreams. You can't teach passion however you can certainly become more adept at recognising it, and while passion can't be faked it does though still have to be communicated.

You know you're a hacker type who reads HN daily and likes to play with different languages and technologies 'just for fun'. However, unless you blog (not everyone feels they have something to say) or make a point of putting everything you write on your GitHub account (maybe you prefer not to release things unless they're fully documented and tested), you're lacking those clear indicators that this is who you are. If that's the case, then it's not going to be immediately obvious for a prospective employer to see that you're any different from your typical career programmer that doesn't touch a line of code between Friday night and Monday morning.

You don't have to turn yourself into a prolific blogger commenting on all the latest trends in the tech world, you just need to create a few simple indicators so that people know 'you're a hacker'. A personal website (again, a personal domain for your email helps here), look for some projects that you can tidy up and push up to GitHub. If you're feeling more adventurous, offer to do a talk at one of your tech meetups.

The sad fact is that this stuff is really easy and when I've got my employer hat on I think this should be obvious, but it appears not. So if this post is starting to resonate with you, take a few hours out at the weekend and address some of these points, and I guarantee you your CV will stand out from the crowd next time you're looking for a job.